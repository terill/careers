{"version":3,"sources":["components/pages/Loading.js","components/pages/CareersList.js","constants.js","components/pages/Home.js","components/pages/CareerPage.js","components/misc/ErrorNotice.js","context/UserContext.js","components/admin/Login.js","components/admin/CareersAdminList.js","components/admin/Admin.js","components/admin/CareerEditPage.js","components/admin/AddCareerPage.js","App.js","index.js"],"names":["Loading","className","CareersList","props","careers","length","map","career","to","link","title","reverse","careersUri","usersUri","careerUri","editorApiKey","Home","useState","appState","setAppState","useEffect","fetch","Constants","then","res","json","CareerPage","careerState","setCareerState","location","pathname","slice","data","msg","locations","dangerouslySetInnerHTML","__html","description","ErrorNotice","message","onClick","clearError","createContext","Login","email","setEmail","password","setPassword","error","setError","useContext","UserContext","userData","setUserData","history","useHistory","user","push","submit","e","a","preventDefault","method","headers","body","JSON","stringify","response","token","localStorage","setItem","undefined","onSubmit","htmlFor","id","type","onChange","target","value","CareersAdminList","Admin","isActive","event","initialValue","apiKey","init","height","menubar","plugins","toolbar","onEditorChange","content","AddCareerPage","trim","toLowerCase","split","join","App","getItem","userResponse","checkLoggedIn","Provider","exact","path","component","CareerEditPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3fcd7e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loading.css';\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className='loadingio-spinner-pulse-6c9ps8zcb2h'>\r\n      <div className='ldio-25dxfh309bl'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './Loading';\r\n\r\nfunction CareersList(props) {\r\n  const { careers } = props;\r\n\r\n  if (!careers) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (careers.length === 0) {\r\n    return <p>No careers, sorry</p>;\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {careers.map(career => {\r\n        return (\r\n          <li key={career.link}>\r\n            <Link to={'/career/' + career.link}>{career.title}</Link>\r\n          </li>\r\n        );\r\n      }).reverse()}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default CareersList;\r\n","export const careersUri = 'https://ximxim-careers-server.herokuapp.com/careers';\r\nexport const usersUri = `${careersUri}/users`;\r\nexport const careerUri = `${careersUri}/career`;\r\n\r\nexport const editorApiKey = '6vu2qt47iepr4y9r4jp6q73zkbt3g5k8my4e5km5g9tu3cz6';\r\n","import React, { useEffect, useState } from 'react';\r\nimport CareersList from './CareersList';\r\nimport * as Constants from '../../constants';\r\n\r\nexport default function Home() {\r\n  const [appState, setAppState] = useState({\r\n    careers: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(Constants.careersUri)\r\n      .then(res => res.json())\r\n      .then(careers => setAppState({ careers }));\r\n  }, [setAppState]);\r\n\r\n  return (\r\n    <div>\r\n      <CareersList careers={appState.careers} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Loading from './Loading';\r\nimport * as Constants from '../../constants';\r\n\r\nfunction CareerPage(props) {\r\n  const [careerState, setCareerState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`${Constants.careerUri}/${props.location.pathname.slice(8)}`)\r\n      .then(res => res.json())\r\n      .then(data => setCareerState(data));\r\n  }, [props.location.pathname]);\r\n\r\n  if (!careerState) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return careerState.msg ? (\r\n    <Redirect to='/' />\r\n  ) : (\r\n    <div>\r\n      <h1 className='title domains__title'>{careerState.title}</h1>\r\n      <p className='title domains__title'>\r\n        Locations: {careerState.locations}\r\n      </p>\r\n      <div dangerouslySetInnerHTML={{__html: careerState.description}} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CareerPage;\r\n","import React from 'react';\r\n\r\nexport default function ErrorNotice(props) {\r\n  return (\r\n    <div className='error-notice'>\r\n      <span>{props.message}</span>\r\n      <button onClick={props.clearError}>X</button>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext(null);\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ErrorNotice from '../misc/ErrorNotice';\r\nimport UserContext from '../../context/UserContext';\r\nimport * as Constants from '../../constants';\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (userData.user) {\r\n      history.push('/admin');\r\n    }\r\n  });\r\n\r\n  const submit = async e => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(`${Constants.usersUri}/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password })\r\n    }).then(res => res.json());\r\n\r\n    if (response.msg) {\r\n      return setError(response.msg);\r\n    }\r\n\r\n    setUserData({\r\n      token: response.token,\r\n      user: response.user\r\n    });\r\n\r\n    localStorage.setItem('auth-token', response.token);\r\n    history.push('/admin');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log in</h2>\r\n      {error && (\r\n        <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n      )}\r\n      <form onSubmit={submit}>\r\n        <label htmlFor='login-email'>Email</label>\r\n        <input\r\n          id='login-email'\r\n          type='email'\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor='login-password'>Password</label>\r\n        <input\r\n          id='login-password'\r\n          type='password'\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n\r\n        <input type='submit' value='Log in' />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../pages/Loading';\r\n\r\nfunction CareersAdminList(props) {\r\n  const { careers } = props;\r\n\r\n  if (!careers) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (careers.length === 0) {\r\n    return <p>No careers, sorry</p>;\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {careers.map(career => {\r\n        return (\r\n          <li\r\n            key={career.link}>\r\n            <Link to={'/admin/career/' + career.link}>{career.title}</Link>\r\n          </li>\r\n        );\r\n      }).reverse()}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default CareersAdminList;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as Constants from '../../constants';\r\nimport UserContext from '../../context/UserContext';\r\nimport CareersAdminList from './CareersAdminList';\r\n\r\nfunction Admin() {\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [appState, setAppState] = useState({\r\n    careers: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    let isActive = true;\r\n    fetch(Constants.careersUri)\r\n      .then(res => res.json())\r\n      .then(careers => {\r\n        if (isActive) {\r\n          setAppState({ careers });\r\n        }\r\n      });\r\n    return () => {\r\n      isActive = false;\r\n    };\r\n  }, [setAppState]);\r\n\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined\r\n    });\r\n    localStorage.setItem('auth-token', '');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userData.user) {\r\n      history.push('/admin/login');\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={logout}>Log out</button>\r\n      <br />\r\n      <Link to='/admin/create'>Add a career</Link>\r\n      <CareersAdminList careers={appState.careers} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport Loading from '../pages/Loading';\r\nimport ErrorNotice from '../misc/ErrorNotice';\r\nimport UserContext from '../../context/UserContext';\r\nimport * as Constants from '../../constants';\r\n\r\nfunction CareerPage(props) {\r\n  const { userData } = useContext(UserContext);\r\n  const [error, setError] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userData.user) {\r\n      history.push('/admin/login');\r\n    }\r\n  });\r\n\r\n  const [careerState, setCareerState] = useState();\r\n\r\n  useEffect(() => {\r\n    let isActive = true;\r\n    fetch(`${Constants.careerUri}/${props.location.pathname.slice(14)}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (isActive) {\r\n          setCareerState(data);\r\n        }\r\n      });\r\n    return () => {\r\n      isActive = false;\r\n    };\r\n  }, [props.location.pathname]);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    fetch(`${Constants.careersUri}/edit`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': userData.token\r\n      },\r\n      body: JSON.stringify(careerState)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.msg) {\r\n          return setError(data.msg);\r\n        }\r\n        history.push('/admin');\r\n      });\r\n  };\r\n\r\n  const deleteCareer = () => {\r\n    fetch(`${Constants.careersUri}/delete`, {\r\n      method: 'delete',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': userData.token\r\n      },\r\n      body: JSON.stringify({ id: careerState.id })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.msg) {\r\n          return setError(data.msg);\r\n        }\r\n        history.push('/admin');\r\n      });\r\n  };\r\n\r\n  if (!careerState) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return careerState.msg ? (\r\n    <Redirect to='/' />\r\n  ) : (\r\n    <div>\r\n      {error && (\r\n        <ErrorNotice message={error} clearError={() => setError(null)} />\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Job Title:\r\n          <input\r\n            type='text'\r\n            value={careerState.title}\r\n            onChange={e =>\r\n              setCareerState({ ...careerState, title: e.target.value })\r\n            }\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Locations:\r\n          <input\r\n            type='text'\r\n            value={careerState.locations}\r\n            onChange={e =>\r\n              setCareerState({ ...careerState, locations: e.target.value })\r\n            }\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Job Description:\r\n          <Editor\r\n            initialValue={careerState.description}\r\n            apiKey={Constants.editorApiKey}\r\n            init={{\r\n              height: 500,\r\n              menubar: false,\r\n              plugins: [\r\n                'advlist autolink lists link image charmap print preview anchor',\r\n                'searchreplace visualblocks code fullscreen',\r\n                'insertdatetime media table paste code help wordcount'\r\n              ],\r\n              toolbar: [\r\n                'undo redo | formatselect | bold italic underline forecolor',\r\n                'backcolor | alignleft aligncenter alignright alignjustify |',\r\n                'bullist numlist outdent indent | removeformat | help'\r\n              ]\r\n            }}\r\n            onEditorChange={content =>\r\n              setCareerState({ ...careerState, description: content })\r\n            }\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Link:\r\n          <input\r\n            type='text'\r\n            value={careerState.link}\r\n            onChange={e =>\r\n              setCareerState({ ...careerState, link: e.target.value })\r\n            }\r\n          />\r\n        </label>\r\n        <br />\r\n        <input type='submit' value='Save' />\r\n      </form>\r\n      <button onClick={deleteCareer}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CareerPage;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport UserContext from '../../context/UserContext';\r\nimport ErrorNotice from '../misc/ErrorNotice';\r\nimport * as Constants from '../../constants';\r\n\r\nfunction AddCareerPage() {\r\n  const { userData } = useContext(UserContext);\r\n  const [error, setError] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userData.user) {\r\n      history.push('/admin/login');\r\n    }\r\n  });\r\n\r\n  const [careerState, setCareerState] = useState({\r\n    title: '',\r\n    locations: '',\r\n    description: '',\r\n    link: ''\r\n  });\r\n\r\n  const onTitleChange = event => {\r\n    setCareerState({\r\n      ...careerState,\r\n      title: event.target.value,\r\n      link: event.target.value.trim().toLowerCase().split(/[\\W]/).join('-')\r\n    });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    fetch(`${Constants.careersUri}/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': userData.token\r\n      },\r\n      body: JSON.stringify(careerState)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.msg) {\r\n          return setError(data.msg);\r\n        }\r\n        history.push('/admin');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && (\r\n        <ErrorNotice message={error} clearError={() => setError(null)} />\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Job Title:\r\n          <input type='text' value={careerState.title} onChange={onTitleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Locations:\r\n          <input type='text' value={careerState.locations} onChange={\r\n            e => setCareerState({ ...careerState, locations: e.target.value })\r\n          }/>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Job Description:\r\n          <Editor\r\n            initialValue={careerState.description}\r\n            apiKey={Constants.editorApiKey}\r\n            init={{\r\n              height: 500,\r\n              menubar: false,\r\n              plugins: [\r\n                'advlist autolink lists link image charmap print preview anchor',\r\n                'searchreplace visualblocks code fullscreen',\r\n                'insertdatetime media table paste code help wordcount'\r\n              ],\r\n              toolbar: [\r\n                'undo redo | formatselect | bold italic underline forecolor',\r\n                'backcolor | alignleft aligncenter alignright alignjustify |',\r\n                'bullist numlist outdent indent | removeformat | help'\r\n              ]\r\n            }}\r\n            onEditorChange={content =>\r\n              setCareerState({ ...careerState, description: content })\r\n            }\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Link:\r\n          <input type='text' value={careerState.link} onChange={e =>\r\n            setCareerState({ ...careerState, link: e.target.value })\r\n          }/>\r\n        </label>\r\n        <br />\r\n        <input type='submit' value='Create' />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCareerPage;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport Home from './components/pages/Home';\nimport CareerPage from './components/pages/CareerPage';\nimport Login from './components/admin/Login';\nimport Admin from './components/admin/Admin';\nimport CareerEditPage from './components/admin/CareerEditPage';\nimport AddCareerPage from './components/admin/AddCareerPage';\nimport UserContext from './context/UserContext';\nimport * as Constants from './constants';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n      if (token === null) {\n        localStorage.setItem('auth-token', '');\n        token = '';\n      }\n      const tokenResponse = await fetch(`${Constants.usersUri}/tokenIsValid`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': token\n        }\n      }).then(res => res.json());\n\n      if (tokenResponse) {\n        const userResponse = await fetch(`${Constants.usersUri}/`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': token\n          }\n        }).then(res => res.json());\n        setUserData({ token: token, user: userResponse });\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <div className='container'>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/admin' component={Admin} />\n            <Route path='/admin/login' component={Login} />\n            <Route path='/admin/career' component={CareerEditPage} />\n            <Route path='/admin/create' component={AddCareerPage} />\n            <Route path='/career' component={CareerPage} />\n          </Switch>\n          <Link to='/'>Home</Link> <Link to='/admin'>Admin</Link>\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}